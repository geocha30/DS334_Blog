y = `Average Lap Time`,
fill = Decade)) +
geom_boxplot(color = "black", alpha = 0.7) +
labs(title = "Distribution of Average Lap Times for Drivers in 10-Year Increments",
x = "Decade",
y = "Average Lap Time (seconds)",
fill = "Decade") +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom",
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
#| warning: false
#| echo: false
ggplot(data = all_drivers_df,
aes(x = Decade,
y = `Average Lap Time`,
fill = Decade)) +
geom_boxplot(color = "black", alpha = 0.7) +
labs(title = "Distribution of Average Lap Times for Drivers in 10-Year Increments",
x = "Decade",
y = "Average Lap Time (seconds)",
fill = "Decade") +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom",
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
#| warning: false
#| echo: false
ggplot(data = track_df,
mapping = aes(x = Year,
y = `Average Lap Time`,
col = Circuit)) +
geom_line()+
facet_grid(~Circuit)+
labs(title = "Average Lap Times of the Podium Drivers Over the Years",
x = "Year",
y = "Average Lap Time (seconds)") +
ylim(c(50, 180))+
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom"
)
```{r Drivers Approach Visualization}
---
title: "Has Formula 1 Become Slower?"
---
title: "Has Formula 1 Become Slower?"
# Lets talk Formula 1!
## Introduction:
#| warning: false
#| echo: false
track_df <- testing |>
filter(Position == 1 | Position == 2 | Position == 3) |>
group_by(Year, Circuit) |>
summarise(`Average Lap Time` = mean(`Lap Time`, na.rm = TRUE)) |>
filter(Circuit == "British Grand Prix"|
Circuit == "Belgian Grand Prix"|
Circuit == "Italian Grand Prix"|
Circuit == "Monaco Grand Prix") |>
mutate(Year = case_when(
Year >= 2000, Year = Year - 2000,
Year < 2000, Year = Year - 1900
))
```{r Track Approach}
#| warning: false
#| echo: false
track_df <- testing |>
filter(Position == 1 | Position == 2 | Position == 3) |>
group_by(Year, Circuit) |>
summarise(`Average Lap Time` = mean(`Lap Time`, na.rm = TRUE)) |>
filter(Circuit == "British Grand Prix"|
Circuit == "Belgian Grand Prix"|
Circuit == "Italian Grand Prix"|
Circuit == "Monaco Grand Prix") |>
mutate(Year = case_when(
Year >= 2000 ~ Year = Year - 2000,
#| warning: false
#| echo: false
track_df <- testing |>
filter(Position == 1 | Position == 2 | Position == 3) |>
group_by(Year, Circuit) |>
summarise(`Average Lap Time` = mean(`Lap Time`, na.rm = TRUE)) |>
filter(Circuit == "British Grand Prix"|
Circuit == "Belgian Grand Prix"|
Circuit == "Italian Grand Prix"|
Circuit == "Monaco Grand Prix") |>
mutate(Year = if_else(Year >= 2000, Year - 2000, Year - 1900))
#| warning: false
#| echo: false
ggplot(data = track_df,
mapping = aes(x = Year,
y = `Average Lap Time`,
col = Circuit)) +
geom_line()+
facet_grid(~Circuit)+
labs(title = "Average Lap Times of the Podium Drivers Over the Years",
x = "Year",
y = "Average Lap Time (seconds)") +
ylim(c(50, 180))+
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom"
)
View(track_df)
#| warning: false
#| echo: false
track_df <- testing |>
filter(Position == 1 | Position == 2 | Position == 3) |>
group_by(Year, Circuit) |>
summarise(`Average Lap Time` = mean(`Lap Time`, na.rm = TRUE)) |>
filter(Circuit == "British Grand Prix"|
Circuit == "Belgian Grand Prix"|
Circuit == "Italian Grand Prix"|
Circuit == "Monaco Grand Prix")
#| warning: false
#| echo: false
ggplot(data = track_df,
mapping = aes(x = Year,
y = `Average Lap Time`,
col = Circuit)) +
geom_line()+
facet_grid(~Circuit)+
labs(title = "Average Lap Times of the Podium Drivers Over the Years",
x = "Year",
y = "Average Lap Time (seconds)") +
ylim(c(50, 180))+
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom"
)
---
title: "Has Formula 1 Become Slower?"
#| warning: false
#| echo: false
ggplot(data = track_df,
mapping = aes(x = Year,
y = `Average Lap Time`,
col = Circuit)) +
geom_line()+
facet_grid(~Circuit)+
labs(title = "Average Lap Times of the Podium Drivers Over the Years",
x = "Year",
y = "Average Lap Time (seconds)") +
ylim(c(50, 180))+
scale_x_continuous(labels = function(x) substr(x, 3, 4)) +
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom"
)
# Chunk 1: Load the appropriate packages
#| warning: false
#| echo: false
library(tidyverse)
library(here)
# Chunk 2: Load the appropriate data sets
#| warning: false
#| echo: false
lap_times <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/lap_times.csv")
drivers <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/drivers.csv")
races <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/races.csv")
results <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/results.csv")
# Chunk 3: Prepare the data sets
#| warning: false
#| echo: false
lap_df <- left_join(lap_times, drivers, by = "driverId")
races_df <- left_join(lap_df, races, by = "raceId")
races_df <- races_df |>
select(-c(19:31))
results <- results |>
select(c(1:3), 7)
# Chunk 4: Merge the prior data sets and clear the unecessary columns
#| warning: false
#| echo: false
full_df <- left_join(races_df, results, by = "driverId")
full_df <- full_df |>
select(-c(1:3, 6:9, 12:14, 16, 17, 19, 20))
# Chunk 5: Remove the duplicate rows
#| warning: false
#| echo: false
## Keep the distinct rows and get rid of the multiple duplicates
full_df <- full_df |>
distinct(position.x, time.x, forename, surname, year, name)
# Chunk 6: Rename columns
#| warning: false
#| echo: false
full_df <- full_df |>
rename(
`Lap Time` = time.x,
`Circuit` = name,
`Year` = year,
`Position` = position.x) |>
unite(Driver, c(forename, surname), sep = " ")
# Chunk 7: Modify Lap Time Columns
#| warning: false
#| echo: false
testing <- full_df |>
filter(!is.na(`Lap Time`)) |>
separate(`Lap Time`, into = c("Minutes", "Seconds"), sep = ":") |>
separate(Seconds, into = c("Seconds", "Milliseconds"), sep = +3)
# Chunk 8: Convert Character Columns to Numeric
#| warning: false
#| echo: false
testing$minutes <- as.numeric(testing$Minutes)
testing$seconds <- as.numeric(testing$Seconds)
testing$milliseconds <- as.numeric(testing$Milliseconds)
# Chunk 9: Get an Accurate Lap Time Column
#| warning: false
#| echo: false
testing <- testing |>
select(-c(2:4)) |>
mutate(minutes_to_Seconds = minutes * 60,
milliseconds_to_Seconds = milliseconds / 1000) |>
mutate(`Lap Time` = minutes_to_Seconds + seconds + milliseconds_to_Seconds)
# Chunk 10: Drivers Approach
#| warning: false
#| echo: false
all_drivers_df <- testing |>
filter(!is.na(Driver))
# Chunk 11: Drivers Approach Visualization
#| warning: false
#| echo: false
all_drivers_df <- all_drivers_df |>
mutate(Decade = case_when(
Year >= 1950 & Year < 1960 ~ "1950s",
Year >= 1960 & Year < 1970 ~ "1960s",
Year >= 1970 & Year < 1980 ~ "1970s",
Year >= 1980 & Year < 1990 ~ "1980s",
Year >= 1990 & Year < 2000 ~ "1990s",
Year >= 2000 & Year < 2010 ~ "2000s",
Year >= 2010 & Year < 2020 ~ "2010s",
TRUE ~ "2020s"  # Handling future data
)) |>
group_by(Decade, Driver) |>
summarise(`Average Lap Time` = mean(`Lap Time`, na.rm = TRUE))
# Chunk 12: Visualizations
#| warning: false
#| echo: false
ggplot(data = all_drivers_df,
aes(x = Decade,
y = `Average Lap Time`,
fill = Decade)) +
geom_boxplot(color = "black", alpha = 0.7) +
labs(title = "Distribution of Average Lap Times for Drivers in 10-Year Increments",
x = "Decade",
y = "Average Lap Time (seconds)",
fill = "Decade") +
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom",
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
# Chunk 13: Track Approach
#| warning: false
#| echo: false
track_df <- testing |>
filter(Position == 1 | Position == 2 | Position == 3) |>
group_by(Year, Circuit) |>
summarise(`Average Lap Time` = mean(`Lap Time`, na.rm = TRUE)) |>
filter(Circuit == "British Grand Prix"|
Circuit == "Belgian Grand Prix"|
Circuit == "Italian Grand Prix"|
Circuit == "Monaco Grand Prix")
#| warning: false
#| echo: false
ggplot(data = track_df,
mapping = aes(x = Year,
y = `Average Lap Time`,
col = Circuit)) +
geom_line()+
facet_grid(~Circuit)+
labs(title = "Average Lap Times of the Podium Drivers Over the Years",
x = "Year",
y = "Average Lap Time (seconds)") +
ylim(c(50, 180))+
scale_x_continuous(labels = function(x) substr(x, 3, 4)) +
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom"
)
#| warning: false
#| echo: false
library(tidyverse)
library(here)
#| warning: false
#| echo: false
lap_times <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/lap_times.csv")
drivers <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/drivers.csv")
races <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/races.csv")
results <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/results.csv")
#| warning: false
#| echo: false
lap_df <- left_join(lap_times, drivers, by = "driverId")
races_df <- left_join(lap_df, races, by = "raceId")
races_df <- races_df |>
select(-c(19:31))
results <- results |>
select(c(1:3), 7)
#| warning: false
#| echo: false
full_df <- left_join(races_df, results, by = "driverId")
full_df <- full_df |>
select(-c(1:3, 6:9, 12:14, 16, 17, 19, 20))
#| warning: false
#| echo: false
## Keep the distinct rows and get rid of the multiple duplicates
full_df <- full_df |>
distinct(position.x, time.x, forename, surname, year, name)
# Chunk 1: Load the appropriate packages
#| warning: false
library(tidyverse)
library(here)
# Chunk 2: Load the appropriate data sets
#| warning: false
lap_times <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/lap_times.csv")
drivers <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/drivers.csv")
races <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/races.csv")
results <- read.csv("~/Desktop/Sixth Semester/DS334_Blog/data/formula1/results.csv")
# Chunk 3: Prepare the data sets
#| warning: false
lap_df <- left_join(lap_times, drivers, by = "driverId")
races_df <- left_join(lap_df, races, by = "raceId")
races_df <- races_df |>
select(-c(19:31))
results <- results |>
select(c(1:3), 7)
# Chunk 4: Merge the prior data sets and clear the unecessary columns
#| warning: false
full_df <- left_join(races_df, results, by = "driverId")
full_df <- full_df |>
select(-c(1:3, 6:9, 12:14, 16, 17, 19, 20))
# Chunk 5: Remove the duplicate rows
#| warning: false
## Keep the distinct rows and get rid of the multiple duplicates
full_df <- full_df |>
distinct(position.x, time.x, forename, surname, year, name)
# Chunk 6: Rename columns
#| warning: false
full_df <- full_df |>
rename(
`Lap Time` = time.x,
`Circuit` = name,
`Year` = year,
`Position` = position.x) |>
unite(Driver, c(forename, surname), sep = " ")
# Chunk 7: Modify Lap Time Columns
#| warning: false
testing <- full_df |>
filter(!is.na(`Lap Time`)) |>
separate(`Lap Time`, into = c("Minutes", "Seconds"), sep = ":") |>
separate(Seconds, into = c("Seconds", "Milliseconds"), sep = +3)
# Chunk 8: Convert Character Columns to Numeric
#| warning: false
testing$minutes <- as.numeric(testing$Minutes)
testing$seconds <- as.numeric(testing$Seconds)
testing$milliseconds <- as.numeric(testing$Milliseconds)
# Chunk 9: Get an Accurate Lap Time Column
#| warning: false
testing <- testing |>
select(-c(2:4)) |>
mutate(minutes_to_Seconds = minutes * 60,
milliseconds_to_Seconds = milliseconds / 1000) |>
mutate(`Lap Time` = minutes_to_Seconds + seconds + milliseconds_to_Seconds)
# Chunk 10: Drivers Approach
#| warning: false
all_drivers_df <- testing |>
filter(!is.na(Driver))
# Chunk 11: Drivers Approach Visualization
#| warning: false
all_drivers_df <- all_drivers_df |>
mutate(Decade = case_when(
Year >= 1950 & Year < 1960 ~ "1950s",
Year >= 1960 & Year < 1970 ~ "1960s",
Year >= 1970 & Year < 1980 ~ "1970s",
Year >= 1980 & Year < 1990 ~ "1980s",
Year >= 1990 & Year < 2000 ~ "1990s",
Year >= 2000 & Year < 2010 ~ "2000s",
Year >= 2010 & Year < 2020 ~ "2010s",
TRUE ~ "2020s"  # Handling future data
)) |>
group_by(Decade, Driver) |>
summarise(`Average Lap Time` = mean(`Lap Time`, na.rm = TRUE))
#| warning: false
ggplot(data = all_drivers_df,
aes(x = Decade,
y = `Average Lap Time`,
fill = Decade)) +
geom_boxplot(color = "black", alpha = 0.7) +
labs(title = "Distribution of Average Lap Times for Drivers in 10-Year Increments",
x = "Decade",
y = "Average Lap Time (seconds)",
fill = "Decade") +
ylims(c(50, 150))+
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom",
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
#| warning: false
ggplot(data = all_drivers_df,
aes(x = Decade,
y = `Average Lap Time`,
fill = Decade)) +
geom_boxplot(color = "black", alpha = 0.7) +
labs(title = "Distribution of Average Lap Times for Drivers in 10-Year Increments",
x = "Decade",
y = "Average Lap Time (seconds)",
fill = "Decade") +
ylim(c(50, 150))+
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom",
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
#| warning: false
ggplot(data = all_drivers_df,
aes(x = Decade,
y = `Average Lap Time`,
fill = Decade)) +
geom_boxplot(color = "black", alpha = 0.7) +
labs(title = "Distribution of Average Lap Times for Drivers in 10-Year Increments",
x = "Decade",
y = "Average Lap Time (seconds)",
fill = "Decade") +
ylim(c(60, 140))+
scale_fill_brewer(palette = "Set3") +
theme_minimal() +
theme(
plot.background = element_rect(fill = "ivory"),
panel.background = element_rect(fill = "ivory"),
legend.background = element_rect(fill = "ivory"),
legend.key = element_rect(fill = "ivory"),
legend.position = "bottom",
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank())
